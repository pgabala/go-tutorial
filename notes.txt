Strong and statically typed

solid community

key features
    simplicity
    fast compile times
    garbage collected
    built-in concurrency
    compile to standalone binaries

resources
    golang.org
    play.golang.org

variables
    creation
        inline
            var x int = 42
            x := 42
        
        block
            var (
                x int = 42
            )

        capitals
            at the package level if var is capitalized var is visible outside the package

        
    naming
        length of the var name should reflect the life of the variable
        accronyms should be all uppercase

operators
    := - a way to declare and assign a variable its value


primatives
    every time you initialize a var its has a "zero" value if its not set
    ex. bool = false


conversion
    ex. int(b)


constants
    ex. const myConst int = 42
    
    type can be inferred
    ex. const a = 42

    iota is a special value similar to a counter
    intial value of iota is the "zero" value of a type

write only variable
    ex. _

Arrays
    stored in memory just like C++ each in a row

    [...] type {values} - ... sets size to the count of values

    len([]) - length function

    arrays are actually considered values
        when copying arrays go will actually copy the array by default
            if the above fuctionality is not desired, then use a pointer ;)


Slices
    array reference types and passed by ref and dont have a set size

    slicing operations : can be used with both an array and a Slices

    slices can have elements added and